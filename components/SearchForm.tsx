'use client';

import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Search, Loader2, RotateCcw } from 'lucide-react';

interface SearchFormProps {
  onSearch: (params: {
    query: string;
    country: string;
    lang: string;
    device: string;
    userUrl?: string;
    groupby?: number;
    domain?: string;
    tbm?: string;
    hl?: string;
    gl?: string;
  }) => void;
  isLoading: boolean;
}

export function SearchForm({ onSearch, isLoading }: SearchFormProps) {
  // –ù–ï –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ localStorage –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ - —ç—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–µ–π
  const [query, setQuery] = useState('');
  const [country, setCountry] = useState('us');
  const [lang, setLang] = useState('en');
  const [device, setDevice] = useState('desktop');
  const [userUrl, setUserUrl] = useState('');
  
  // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã XMLStock
  const [groupby, setGroupby] = useState(10);
  const [domain, setDomain] = useState('com');
  const [tbm, setTbm] = useState('none');
  const [hl, setHl] = useState('');
  const [gl, setGl] = useState('');

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ localStorage...');
    const savedSettings = localStorage.getItem('searchSettings');
    
    if (savedSettings) {
      try {
        const settings = JSON.parse(savedSettings);
        console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', settings);
        
        setCountry(settings.country || 'us');
        setLang(settings.lang || 'en');
        setDevice(settings.device || 'desktop');
        if (settings.lastQuery) setQuery(settings.lastQuery);
        if (settings.userUrl) setUserUrl(settings.userUrl);
        
        // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã XMLStock
        if (settings.groupby !== undefined) setGroupby(settings.groupby);
        if (settings.domain) setDomain(settings.domain);
        if (settings.tbm) setTbm(settings.tbm);
        if (settings.hl) setHl(settings.hl);
        if (settings.gl) setGl(settings.gl);
        
        console.log('üìã –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∑–Ω–∞—á–µ–Ω–∏—è:', {
          country: settings.country,
          lang: settings.lang,
          device: settings.device,
          domain: settings.domain,
          tbm: settings.tbm,
          gl: settings.gl,
          hl: settings.hl
        });
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      }
    } else {
      console.log('‚ö†Ô∏è –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }
  }, []);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ (—Å debounce)
  useEffect(() => {
    const timeout = setTimeout(() => {
      const settings = {
        country,
        lang,
        device,
        lastQuery: query,
        userUrl,
        groupby,
        domain,
        tbm,
        hl,
        gl,
      };
      localStorage.setItem('searchSettings', JSON.stringify(settings));
    }, 500);

    return () => clearTimeout(timeout);
  }, [country, lang, device, query, userUrl, groupby, domain, tbm, hl, gl]);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    console.log('üéØ handleSubmit –≤—ã–∑–≤–∞–Ω!');
    console.log('üéØ query:', query);
    console.log('üéØ query.trim():', query.trim());
    console.log('üéØ isLoading:', isLoading);
    
    if (!query.trim()) {
      console.log('‚ö†Ô∏è query –ø—É—Å—Ç–æ–π, –≤—ã—Ö–æ–¥–∏–º –∏–∑ handleSubmit');
      return;
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–¥ –ø–æ–∏—Å–∫–æ–º
    const settings = {
      country,
      lang,
      device,
      lastQuery: query,
      userUrl,
      groupby,
      domain,
      tbm,
      hl,
      gl,
    };
    console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–¥ –ø–æ–∏—Å–∫–æ–º:', settings);
    localStorage.setItem('searchSettings', JSON.stringify(settings));

    const searchParams = {
      query: query.trim(),
      country,
      lang,
      device,
      userUrl: userUrl.trim() || undefined,
      groupby: groupby,
      domain: domain,
      tbm: tbm === 'none' ? undefined : tbm,
      hl: hl || undefined,
      gl: gl || undefined,
    };
    console.log('üîç –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:', searchParams);
    
    onSearch(searchParams);
  };

  const resetToDefaults = () => {
    setQuery('');
    setCountry('us');
    setLang('en');
    setDevice('desktop');
    setUserUrl('');
    setGroupby(10);
    setDomain('com');
    setTbm('none');
    setHl('');
    setGl('');
    localStorage.removeItem('searchSettings');
  };

  // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
  console.log('üîÑ SearchForm —Ä–µ–Ω–¥–µ—Ä, query:', query, 'isLoading:', isLoading, 'disabled:', isLoading || !query.trim());

  return (
    <Card className="w-full max-w-4xl mx-auto">
      <CardHeader>
        <CardTitle className="text-2xl">–ê–Ω–∞–ª–∏–∑ –∫–ª—é—á–µ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –¢–û–ü-10 Google</CardTitle>
        <p className="text-muted-foreground">
          –í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—É—â–Ω–æ—Å—Ç–µ–π –≤ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø–æ–∏—Å–∫–∞
        </p>
      </CardHeader>
      <CardContent>
        <form onSubmit={handleSubmit} className="space-y-6" onClick={(e) => {
          console.log('üìù –ö–ª–∏–∫ –≥–¥–µ-—Ç–æ –≤ —Ñ–æ—Ä–º–µ!', e.target);
        }}>
          {/* –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å */}
          <div className="space-y-2">
            <label htmlFor="query" className="text-sm font-medium">
              –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å *
            </label>
            <Input
              id="query"
              type="text"
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –∫—É—Ä—Å—ã –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞"
              value={query}
              onChange={(e) => setQuery(e.target.value)}
              required
              disabled={isLoading}
            />
          </div>

          {/* URL –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ */}
          <div className="space-y-2">
            <label htmlFor="userUrl" className="text-sm font-medium">
              –í–∞—à URL –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            </label>
            <Input
              id="userUrl"
              type="url"
              placeholder="https://example.com"
              value={userUrl}
              onChange={(e) => setUserUrl(e.target.value)}
              disabled={isLoading}
            />
            <p className="text-xs text-muted-foreground">
              –í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –¢–û–ü-10 –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
            </p>
          </div>

          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞ */}
          <div>
            <div className="flex justify-between items-center mb-4">
              <h3 className="text-lg font-medium">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞</h3>
              <Button
                type="button"
                variant="ghost"
                size="sm"
                onClick={resetToDefaults}
                disabled={isLoading}
              >
                <RotateCcw className="mr-2 h-4 w-4" />
                –°–±—Ä–æ—Å–∏—Ç—å
              </Button>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              {/* –°—Ç—Ä–∞–Ω–∞ */}
              <div className="space-y-2">
                <label className="text-sm font-medium">–°—Ç—Ä–∞–Ω–∞</label>
                <Select value={country} onValueChange={setCountry} disabled={isLoading}>
                  <SelectTrigger>
                    <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="us">–°–®–ê (us)</SelectItem>
                    <SelectItem value="ru">–†–æ—Å—Å–∏—è (ru)</SelectItem>
                    <SelectItem value="uk">–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è (uk)</SelectItem>
                    <SelectItem value="de">–ì–µ—Ä–º–∞–Ω–∏—è (de)</SelectItem>
                    <SelectItem value="fr">–§—Ä–∞–Ω—Ü–∏—è (fr)</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              {/* –Ø–∑—ã–∫ */}
              <div className="space-y-2">
                <label className="text-sm font-medium">–Ø–∑—ã–∫</label>
                <Select value={lang} onValueChange={setLang} disabled={isLoading}>
                  <SelectTrigger>
                    <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="en">–ê–Ω–≥–ª–∏–π—Å–∫–∏–π (en)</SelectItem>
                    <SelectItem value="ru">–†—É—Å—Å–∫–∏–π (ru)</SelectItem>
                    <SelectItem value="de">–ù–µ–º–µ—Ü–∫–∏–π (de)</SelectItem>
                    <SelectItem value="fr">–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π (fr)</SelectItem>
                    <SelectItem value="es">–ò—Å–ø–∞–Ω—Å–∫–∏–π (es)</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              {/* –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ */}
              <div className="space-y-2">
                <label className="text-sm font-medium">–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ</label>
                <Select value={device} onValueChange={setDevice} disabled={isLoading}>
                  <SelectTrigger>
                    <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="desktop">–î–µ—Å–∫—Ç–æ–ø</SelectItem>
                    <SelectItem value="mobile">–ú–æ–±–∏–ª—å–Ω—ã–π</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>
          </div>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ */}
          <div>
            <h3 className="text-lg font-medium mb-4">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</h3>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {/* –î–æ–º–µ–Ω Google */}
              <div className="space-y-2">
                <label className="text-sm font-medium">–î–æ–º–µ–Ω Google</label>
                <Select value={domain} onValueChange={setDomain} disabled={isLoading}>
                  <SelectTrigger>
                    <SelectValue />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="com">google.com</SelectItem>
                    <SelectItem value="ru">google.ru</SelectItem>
                    <SelectItem value="co.uk">google.co.uk</SelectItem>
                    <SelectItem value="de">google.de</SelectItem>
                    <SelectItem value="fr">google.fr</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              {/* –¢–∏–ø –ø–æ–∏—Å–∫–∞ */}
              <div className="space-y-2">
                <label className="text-sm font-medium">–¢–∏–ø –ø–æ–∏—Å–∫–∞</label>
                <Select value={tbm} onValueChange={setTbm} disabled={isLoading}>
                  <SelectTrigger>
                    <SelectValue />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="none">–û–±—ã—á–Ω—ã–π –ø–æ–∏—Å–∫</SelectItem>
                    <SelectItem value="images">–ö–∞—Ä—Ç–∏–Ω–∫–∏</SelectItem>
                    <SelectItem value="news">–ù–æ–≤–æ—Å—Ç–∏</SelectItem>
                    <SelectItem value="video">–í–∏–¥–µ–æ</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              {/* –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (hl) */}
              <div className="space-y-2">
                <label className="text-sm font-medium">–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (hl)</label>
                <Input
                  type="text"
                  placeholder="en, ru –∏ —Ç.–¥."
                  value={hl}
                  onChange={(e) => setHl(e.target.value)}
                  disabled={isLoading}
                />
              </div>

              {/* –°—Ç—Ä–∞–Ω–∞ –ø–æ–∏—Å–∫–∞ (GL) */}
              <div className="space-y-2">
                <label className="text-sm font-medium">–°—Ç—Ä–∞–Ω–∞ –ø–æ–∏—Å–∫–∞ (GL)</label>
                <Input
                  type="text"
                  placeholder="RU, US –∏ —Ç.–¥."
                  value={gl}
                  onChange={(e) => setGl(e.target.value.toUpperCase())}
                  disabled={isLoading}
                />
              </div>
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞ */}
          <Button
            type="submit"
            className="w-full"
            size="lg"
            disabled={isLoading || !query.trim()}
            onClick={() => {
              console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ!');
              console.log('üñ±Ô∏è isLoading:', isLoading);
              console.log('üñ±Ô∏è query:', query);
              console.log('üñ±Ô∏è disabled:', isLoading || !query.trim());
            }}
          >
            {isLoading ? (
              <>
                <Loader2 className="mr-2 h-5 w-5 animate-spin" />
                –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º...
              </>
            ) : (
              <>
                <Search className="mr-2 h-5 w-5" />
                –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å
              </>
            )}
          </Button>
        </form>
      </CardContent>
    </Card>
  );
}
